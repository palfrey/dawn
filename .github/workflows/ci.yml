on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 0 1 * *'  

name: CI

jobs:
  build_and_test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        features: ["--features=lambda --no-default-features", ""]
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades --no-install-recommends pkg-config libssl-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Build and test
        uses: actions-rs/cargo@v1
        env:
          RUST_BACKTRACE: 1
        with:
          command: test
          args:  ${{ matrix.features }} -- --nocapture
      - name: Check HTTP response
        if: ${{ matrix.features == '' }}
        run: ./test.sh
  
  bazel:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Mount bazel cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('bazel/crates.bzl') }}
        
      - name: Install Bazelisk
        uses: tullyliu/bazelisk-action@1.2
        with:
          version: '1.7.5'
          bazel-install-path: './.local/bin'
          os: 'linux'
        
      - name: Bazel build
        run: bazel build //:dawn

      - name: Bazel test
        run: bazel test //:dawn_test        